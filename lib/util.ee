#   
*   util.ee
*   Author: Daniel Fern√°ndez Villanueva
#

#   Function for  
*   Executes the function .fn for each element of .list #
[   ["list" "fn"] def
    list abs "size" def
    0 "k" def
    [list k get] fn cat [k ++ "k" def] cat [k size <] while
] "for" fun


#   Function map  
*   Executes the function .fn for each element of .list
*   and returns a list of the results #
[   ["list" "fn"] def
    list abs "size" def
    0 "k" def
    [list k get] fn cat [k ++ "k" def] cat [k size <] while
    size npack
] "map" fun


#   Function range  
*   Creates a list of integers from 0 to .n #
[   "n" def
    [   0 "k" def
        [k . ++ "k" def][k n <] while
        n npack
    ][  "Types not supported" error
    ] n who "integer" = ifelse
] "integer:range" fun


#   Function list:*
*   #
[   ["n" "ll"] def
    ll
    n 1 - range 
    [..] ll pack cat [cat] cat 
    for
] "list:*" fun

   
#   Function is_prime  
*   Returns true if the number .n is prime, and false otherwise #
[   "n" def
    [false ret] n 1 <= if
    2 "k" def
    n real 0.5 pow _ "lim" def
    [   [false ret] n k % 0 = if 
        k 1 + "k" def
    ][k lim <=]while
    true
] "integer:is_prime" fun


#   Function factor  
*   Returns a list of the prime factors of the number .n #
[   "n" def
    2 "k" def
    [] "res" def
    [   [   n k // "n" def 
            res k pack cat "res" def
        ][k ++ "k" def] 
        n k % 0 = ifelse
    ][n 1 !=] while
    res
] "integer:factor" fun

[   ["n1" "n2"] def
    [n1 ret] n1 n2 = if
    [1 ret] n1 1 = n2 1 = or if
    [n1 n2 - n2 gcd][n2 n1 - n1 gcd] n1 n2 > ifelse
] "integer:gcd" fun

#   End of file   #
